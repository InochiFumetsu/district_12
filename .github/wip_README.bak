# district_12
ECOR1042_Lab1B_Course_Project

# REPO PROCEDURE:
## Reviewing Pull Requests (PRs) from _others_:
    1) Click "Pull Requests" tab at the top menu bar (above)
    2) **Start at the bottom of the list**
    3) Click on the PR you want to review
    4) Click on "Files Changed" tab along 2nd-top menu bar (at the right)
    5) **Double-Check**
        a) The PR is for a merge **from a side branch** INTO **master branch**
        b) The PR is for a change to a main project file (eg. "T012_M1_load_data.py")
    6) Review the changes / make any in-line comments or code suggestions you would like
    7) Click the **GREEN BUTTON** (top-right) and select:
        a) Comment (no review)
        b) Request Changes
        c) Approve
        **CLICK SUBMIT REVIEW**
  **(8) Please note: If you are the one to "Squash and Merge" a PR _(you were the last one to approve the PR)_
        Please ensure you click ("DELETE BRANCH") -- it will be located directly above the write comment field
        in the page that loads after you merge the PR -- HIGHLIGHTED IN PURPLE BORDER**

## To Create a new Pull Request (PR) _adding your code to a group file_:
    1) Click "Code" tab at the top menu bar (on the left, above)
    2) **Double-CHeck** you are in the "MASTER" branch
        _the drop-down showing which branch you are in is located immediately below "Issues"
        in the top-menu-bar._
       **NOTE:**
       _If you can't see the list of files contained in the branch in the middle of your screen,
       right below "MASTER" branch selection drop-down button, look for "View Code" (blue link)
       in the center of your screen toward the bottom-half (and click it)_
    3) Click the file you would like to edit (add your code into)
    4) Click the **PENCIL** icon at the top-right of the file viewing pane
    5) COPY and PASTE your code from Wing101 into the file in the correct place
    6) Scroll to the bottom of the page - to where it says **PROPOSE CHANGES**
    7) Replace "Create/Update <file_name.py>" with a **DESCRIPTIVE TITLE**
       _the title should concisely tell us what change you are making to the file_
    8) Write any additional information you would like to include with the PR in the 
       "_Add optional extended description..._" field
    9) Change branch title from _<your_user_name>-patch-1_ to something **descriptive**
       _ex: final_version-add_average()_
    10) Click the Green Button **Propose Changes**
    11) On the next screen, click Green Button **Create Pull Request**
    

# CODE CONVENTION:
    <do we want to institute any coding conventions we all have to adhere to before we begin coding?>
    for example: 80 character line limits or writing docstrings for all functions / commenting all code?
    



# COMPLETED:

# Lab 3 “LOAD DATA MODULE” <Text Processing / Dicts / Lists>
    •	Read .csv file into data structure
    •	“Text Processing”? -> create a dictionary and fill it with student data
    •	Keys (not sure if we’re supposed to do one (dict) for each or just pick one):
       o	School
       o	Age
       o	Health
       o	Failures
    •	Calculate each student’s average grade
       o	Append it into the dict
       
# Lab 4 <Unit testing / sets>
    •	Unit testing:
       o	Perform a bunch of tests to ensure previously build (load data) module works “perfectly”

# Lab 5 “SORT/PLOT MODULE” <Lists/Sorting/CurveFitting/Plotting>
    •	Create a function which converts the dictionaries (created by previously written functions) into 
            LISTS of students
    •	Create functionS (multiple) *using sorting algorithms (I assume taught in lecture)* which sort
            the (above) lists according to the different data (age / grades / health etc.) AND RETURN THE 
            SORTED DATA
    •	“Do regression and/or interpolation to return the polynomial that best fits your data” – that’s 
            all it says, I don’t know which data set we’re supposed to use for that (or if it matters – 
            it shouldn’t) – also don’t know if it’s supposed to be a single function that performs 
            multiple types of regression or what…
    •	Create A function which plots histograms of the students’ data (based I guess on which sorted list
            you pass as an argument to the function?)

# Lab 6
    •	“find minimum and maximum of given data using different libraries” – whatever that means
       o	Supposed to use OPTIMIZATION AND EQUATION OF LINE OF BEST FIT --  though that might be for the 
            whole lab not just the above task
    •	Create TWO user interfaces which allow the user to “call and execute the functions created in the 
            past labs”:
       1.	Take inputs directly from the terminal to execute commands
       2.	Second will read a string of commands from a text file (“batch interface”)
    •	Create “ReadMe” file & “wrap up” whatever that means.
   
